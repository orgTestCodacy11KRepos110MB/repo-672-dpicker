(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.DPicker = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function nanomorph(e, o) {
    assert.equal(typeof e, 'object', 'nanomorph: oldTree should be an object'), assert.equal(typeof o, 'object', 'nanomorph: newTree should be an object');
    var a = walk(o, e);
    return a;
}
function walk(e, o) {
    return o ? e ? e.isSameNode && e.isSameNode(o) ? o : e.tagName !== o.tagName ? e : (morph(e, o), updateChildren(e, o), o) : null : e;
}
function updateChildren(e, o) {
    if (e.childNodes && o.childNodes)
        for (var a = e.childNodes.length, r = o.childNodes.length, d = Math.max(r, a), l = 0, n = 0, h = 0; h < d; h++, l++, n++) {
            var t = e.childNodes[l], i = o.childNodes[n], s = walk(t, i);
            s ? i ? s !== i && (o.replaceChild(s, i), l--) : s && (o.appendChild(s), l--) : i && (o.removeChild(i), n--);
        }
}
var morph = require('./lib/morph');
module.exports = nanomorph;
},{"./lib/morph":3}],2:[function(require,module,exports){
module.exports = [
    'onclick',
    'ondblclick',
    'onmousedown',
    'onmouseup',
    'onmouseover',
    'onmousemove',
    'onmouseout',
    'ondragstart',
    'ondrag',
    'ondragenter',
    'ondragleave',
    'ondragover',
    'ondrop',
    'ondragend',
    'onkeydown',
    'onkeypress',
    'onkeyup',
    'onunload',
    'onabort',
    'onerror',
    'onresize',
    'onscroll',
    'onselect',
    'onchange',
    'onsubmit',
    'onreset',
    'onfocus',
    'onblur',
    'oninput',
    'oncontextmenu',
    'onfocusin',
    'onfocusout'
];
},{}],3:[function(require,module,exports){
function morph(e, t) {
    var u = e.nodeType, l = e.nodeName;
    u === ELEMENT_NODE && copyAttrs(e, t), u !== TEXT_NODE && u !== COMMENT_NODE || (t.nodeValue = e.nodeValue), 'INPUT' === l ? updateInput(e, t) : 'OPTION' === l ? updateOption(e, t) : 'TEXTAREA' === l ? updateTextarea(e, t) : 'SELECT' === l && updateSelect(e, t), copyEvents(e, t);
}
function copyAttrs(e, t) {
    for (var u = t.attributes, l = e.attributes, a = null, n = null, r = null, i = null, d = null, o = l.length - 1; o >= 0; --o)
        d = l[o], i = d.name, a = d.namespaceURI, n = d.value, a ? (i = d.localName || i, r = t.getAttributeNS(a, i), r !== n && t.setAttributeNS(a, i, n)) : (r = t.getAttribute(i), r !== n && ('null' === n || 'undefined' === n ? t.removeAttribute(i) : t.setAttribute(i, n)));
    for (var s = u.length - 1; s >= 0; --s)
        d = u[s], d.specified !== !1 && (i = d.name, a = d.namespaceURI, a ? (i = d.localName || i, e.hasAttributeNS(a, i) || t.removeAttributeNS(a, i)) : e.hasAttributeNS(null, i) || t.removeAttribute(i));
}
function copyEvents(e, t) {
    for (var u = 0; u < eventsLength; u++) {
        var l = events[u];
        e[l] ? t[l] = e[l] : t[l] && (t[l] = void 0);
    }
}
function updateOption(e, t) {
    updateAttribute(e, t, 'selected');
}
function updateInput(e, t) {
    var u = e.value, l = t.value;
    updateAttribute(e, t, 'checked'), updateAttribute(e, t, 'disabled'), e.hasAttributeNS(null, 'value') && 'null' !== u ? u !== l ? (t.setAttribute('value', u), t.value = u) : t.value = u : (t.value = '', t.removeAttribute('value'));
}
function updateTextarea(e, t) {
    var u = e.value;
    if (u !== t.value && (t.value = u), t.firstChild) {
        if ('' === u && t.firstChild.nodeValue === t.placeholder)
            return;
        t.firstChild.nodeValue = u;
    }
}
function updateSelect(e, t) {
    if (!t.hasAttributeNS(null, 'multiple')) {
        for (var u = e.firstChild, l = 0; u;) {
            var a = u.nodeName;
            if (a && 'OPTION' === a.toUpperCase()) {
                if (u.hasAttributeNS(null, 'selected') && 'null' !== u.getAttributeNS(null, 'selected'))
                    break;
                l++;
            }
            u = u.nextSibling;
        }
        e.selectedIndex = t.selectedIndex = l;
    }
}
function updateAttribute(e, t, u) {
    e[u] !== t[u] && (t[u] = e[u], e[u] ? t.setAttribute(u, '') : t.removeAttribute(u, ''));
}
var events = require('./events'), eventsLength = events.length, ELEMENT_NODE = 1, TEXT_NODE = 3, COMMENT_NODE = 8;
module.exports = morph;
},{"./events":2}],4:[function(require,module,exports){
module.exports = function e(t, n) {
    for (var o = 0; o < n.length; o++) {
        var a = n[o];
        if (Array.isArray(a))
            e(t, a);
        else {
            if (('number' == typeof a || 'boolean' == typeof a || a instanceof Date || a instanceof RegExp) && (a = a.toString()), 'string' == typeof a) {
                if (t.lastChild && '#text' === t.lastChild.nodeName) {
                    t.lastChild.nodeValue += a;
                    continue;
                }
                a = document.createTextNode(a);
            }
            a && a.nodeType && t.appendChild(a);
        }
    }
};
},{}],5:[function(require,module,exports){
'use strict';
function noop() {
}
function uuid() {
    return ([10000000] + -1000 + -4000 + -8000 + -100000000000).replace(/[018]/g, function (t) {
        return (t ^ 16 * Math.random() >> t / 4).toString(16);
    });
}
function isElementInContainer(t, e) {
    for (; t && t !== document;) {
        if (t.getAttribute('id') === e)
            return !0;
        t = t.parentNode;
    }
    return !1;
}
function DPicker(t) {
    var e = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (!(this instanceof DPicker))
        return new DPicker(t, n);
    var i = this._getContainer(t), a = i.container, r = i.attributes;
    this._container = uuid(), this._data = {};
    var o = {
        months: moment.months(),
        days: moment.weekdaysShort(),
        empty: !1,
        valid: !0,
        order: [
            'months',
            'years',
            'time',
            'days'
        ],
        hideOnDayClick: !0,
        hideOnEnter: !0,
        hideOnOutsideClick: !0,
        siblingMonthDayClick: !1,
        firstDayOfWeek: moment.localeData().firstDayOfWeek()
    };
    for (var d in o)
        void 0 === n[d] ? this._data[d] = o[d] : this._data[d] = n[d];
    t.getEttr;
    this._data.inputName = r.name ? r.name : n.inputName ? n.inputName : 'dpicker-input', this._data.inputId = r.id ? r.id : n.inputId ? n.inputId : uuid(), this._setData('format', [
        r.format,
        'DD/MM/YYYY'
    ]);
    var s = {
        display: !1,
        min: moment('1986-01-01'),
        max: moment().add(1, 'year').month(11),
        format: this._data.format
    };
    for (var u in s)
        void 0 !== n[u] && (s[u] = n[u]);
    this._loadModules(s, r, n), this._createMethods(s, r), void 0 !== r.value && '' !== r.value || (this._data.empty = !0), this._setData('model', [
        r.value,
        n.model,
        moment()
    ], !0), this.onChange = n.onChange, document.addEventListener('click', this._events.hide), document.addEventListener('touchend', function (t) {
        e._events.inputBlur(t);
    }), this.initialize(), this.mount(a), a.id = this._container, a.addEventListener('keydown', this._events.keyDown);
    var l = a.querySelector('input');
    return l.addEventListener('blur', this._events.inputBlur), this;
}
var _appendChild = require('yo-yoify/lib/appendChild'), nanomorph = require('nanomorph');
DPicker.prototype._setData = function (t, e) {
    for (var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], i = 0; i < e.length; i++)
        if (void 0 !== e[i] && '' !== e[i]) {
            if (n === !1) {
                this._data[t] = e[i];
                break;
            }
            if (e[i] instanceof moment && e[i].isValid()) {
                this._data[t] = e[i];
                break;
            }
            this._data[t] = moment();
            var a = moment(e[i], this._data.format, !0);
            if (a.isValid()) {
                this._data[t] = a;
                break;
            }
        }
}, DPicker.prototype._createGetSet = function (t) {
    DPicker.prototype.hasOwnProperty(t) || Object.defineProperty(DPicker.prototype, t, {
        get: function () {
            return this._data[t];
        },
        set: function (e) {
            this._data[t] = e, this.redraw();
        }
    });
}, DPicker.prototype._createMethods = function (t, e) {
    for (var n in t)
        this._createGetSet(n), this._setData(n, [
            e[n],
            t[n]
        ], t[n] instanceof moment);
}, DPicker.prototype._getContainer = function (t) {
    if ('undefined' == typeof t)
        throw new ReferenceError('Can not initialize DPicker without a container');
    var e = {};
    if ([].slice.call(t.attributes).forEach(function (t) {
            e[t.name] = t.value;
        }), void 0 !== t.length && t[0] && (t = t[0]), 'INPUT' === t.tagName) {
        if (!t.parentNode)
            throw new ReferenceError('Can not initialize DPicker on an input without parent node');
        var n = t.parentNode;
        t.parentNode.removeChild(t), t = n, t.classList.add('dpicker');
    }
    return {
        container: t,
        attributes: e
    };
}, DPicker.prototype.getTree = function () {
    return this.renderContainer(this._events, this._data, [
        this.renderInput(this._events, this._data),
        this.render(this._events, this._data, this.getRenderChild())
    ]);
}, DPicker.prototype.initialize = function () {
    this.isValid(this._data.model);
}, DPicker.prototype.mount = function (t) {
    this._tree = this.getTree(), t.appendChild(this._tree);
}, DPicker.prototype.getRenderChild = function () {
    var t = {
        years: this.renderYears(this._events, this._data),
        months: this.renderMonths(this._events, this._data)
    };
    for (var e in this._modulesRender)
        for (var n in this._modulesRender[e])
            t[n] = this._modulesRender[e][n](this._events, this._data);
    return t.days = this.renderDays(this._events, this._data), this._data.order.filter(function (e) {
        return t[e];
    }).map(function (e) {
        return t[e];
    });
}, DPicker.prototype._loadModules = function (t, e, n) {
    var i = this;
    this._events = this._loadEvents(), this._modulesRender = {};
    for (var a in DPicker.modules) {
        var r = DPicker.modules[a], o = function (t) {
                return i._events[t] ? (i._events[t + '-internal'] || (i._events[t + '-internal'] = [i._events[t]], i._events[t] = function (e) {
                    i._events[t + '-internal'].map(function (t) {
                        return t.bind(i)(e);
                    });
                }), void i._events[t + '-internal'].unshift(r.events[t])) : (i._events[t] = r.events[t].bind(i), 'continue');
            };
        for (var d in r.events) {
            o(d);
        }
        var s = function (t) {
            return DPicker.prototype.hasOwnProperty(t) && 'function' == typeof r.calls[t] ? (i[t + '-internal'] || (i[t + '-internal'] = [DPicker.prototype[t]], i[t] = function () {
                for (var e = arguments.length, n = Array(e), a = 0; a < e; a++)
                    n[a] = arguments[a];
                i[t + '-internal'].map(function (t) {
                    return t.apply(i, n);
                });
            }), void i[t + '-internal'].push(r.calls[t])) : 'continue';
        };
        for (var u in r.calls) {
            s(u);
        }
        if (r.render)
            for (var l in r.render)
                this._modulesRender[l] = r.render;
        if (r.properties)
            for (var c in r.properties)
                if (!this._data[c]) {
                    var m = r.properties[c], h = 'function' == typeof m.attribute ? m.attribute(e) : e[m.attribute];
                    this._createGetSet(c), this._setData(c, [
                        h,
                        n[c],
                        m['default']
                    ], !!m.isMoment);
                }
    }
}, DPicker.prototype._loadEvents = function () {
    var t = this;
    return {
        hide: function (e) {
            if (t._data.hideOnOutsideClick !== !1 && t.display !== !1) {
                var n = e.target;
                isElementInContainer(n.parentNode, t._container) || (t.display = !1, t.onChange(!1));
            }
        },
        inputChange: function (e) {
            if (e.target.value) {
                var n = moment(e.target.value, t._data.format, !0);
                t.isValid(n) === !0 && (t._data.model = n), t._data.empty = !1;
            } else
                t._data.empty = !0;
            t.redraw(), t.onChange(!0);
        },
        inputBlur: function (e) {
            if (t.display !== !1) {
                var n = e.relatedTarget || e.target;
                isElementInContainer(n.parentNode, t._container) || (t.display = !1, t.onChange(!1));
            }
        },
        inputFocus: function (e) {
            t.display = !0, e.target && e.target.select && e.target.select(), t.onChange(!1);
        },
        yearChange: function (e) {
            t._data.empty = !1, t._data.model.year(e.target.options[e.target.selectedIndex].value), t.isValid(t._data.model), t.redraw(), t.onChange(!0);
        },
        monthChange: function (e) {
            t._data.empty = !1, t._data.model.month(e.target.options[e.target.selectedIndex].value), t.isValid(t._data.model), t.redraw(), t.onChange(!0);
        },
        dayClick: function (e) {
            e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange(!0);
        },
        previousMonthDayClick: function (e) {
            t._data.siblingMonthDayClick && (e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.model.subtract(1, 'month'), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange(!0));
        },
        nextMonthDayClick: function (e) {
            t._data.siblingMonthDayClick && (e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.model.add(1, 'month'), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange(!0));
        },
        dayKeyDown: function () {
        },
        keyDown: function (e) {
            if (t._data.hideOnEnter) {
                var n = e.which || e.keyCode;
                13 !== n && 27 !== n || (document.getElementById(t.inputId).blur(), t.display = !1, t.onChange(!1));
            }
        }
    };
}, DPicker.prototype.isValid = function (t) {
    if (!(t instanceof moment && t.isValid()))
        return this._data.valid = !1, !1;
    var e = this.time ? 'minute' : 'day';
    return t.isBefore(this._data.min, e) || t.isAfter(this._data.max, e) ? (this._data.valid = !1, !0) : (this._data.valid = !0, !0);
}, DPicker.prototype.renderInput = function (t, e, n) {
    var i;
    return i = document.createElement('input'), i.setAttribute('id', '' + String(e.inputId)), i.setAttribute('value', '' + String(e.empty === !0 ? '' : e.model.format(e.format))), i.setAttribute('type', 'text'), i.setAttribute('min', '' + String(e.min.format(e.format))), i.setAttribute('max', '' + String(e.max.format(e.format))), i.setAttribute('format', '' + String(e.format)), i.onchange = t.inputChange, i.onfocus = t.inputFocus, i.setAttribute('name', '' + String(e.inputName)), i.setAttribute('aria-invalid', '' + String(e.valid === !1)), i.setAttribute('aria-haspopup', 'aria-haspopup'), i.setAttribute('class', '' + String(e.valid === !1 ? 'dpicker-invalid' : '')), i;
}, DPicker.prototype.renderContainer = function (t, e, n) {
    var i;
    return i = document.createElement('div'), i.setAttribute('class', 'dpicker'), _appendChild(i, [n]), i;
}, DPicker.prototype.render = function (t, e, n) {
    var i;
    return i = document.createElement('div'), i.setAttribute('aria-hidden', '' + String(e.display === !1)), i.setAttribute('class', 'dpicker-container ' + String(e.display === !0 ? 'dpicker-visible' : 'dpicker-invisible')), _appendChild(i, [
        '\n    ',
        n,
        '\n    '
    ]), i;
}, DPicker.prototype.renderYears = function (t, e, n) {
    for (var i, a = e.model.year(), r = e.max.year() + 1, o = e.min.year(), d = []; --r >= o;)
        if (r === a) {
            var s;
            d.push((s = document.createElement('option'), s.setAttribute('value', '' + String(r)), s.setAttribute('selected', 'selected'), _appendChild(s, [r]), s));
        } else {
            var u;
            d.push((u = document.createElement('option'), u.setAttribute('value', '' + String(r)), _appendChild(u, [r]), u));
        }
    return i = document.createElement('select'), i.onchange = t.yearChange, i.setAttribute('name', 'dpicker-year'), i.setAttribute('aria-label', 'Year'), _appendChild(i, [d]), i;
}, DPicker.prototype.renderMonths = function (t, e, n) {
    var i, a = e.model.month(), r = e.model.year(), o = e.months, d = e.months.map(function (t, e) {
            return e;
        });
    if (e.max.year() === r) {
        var s = e.max.month();
        d = d.filter(function (t) {
            return t <= s;
        });
    }
    if (e.min.year() === r) {
        var u = e.min.month();
        d = d.filter(function (t) {
            return t >= u;
        });
    }
    return i = document.createElement('select'), i.onchange = t.monthChange, i.setAttribute('name', 'dpicker-month'), i.setAttribute('aria-label', 'Month'), _appendChild(i, [
        '\n      ',
        d.map(function (t, e) {
            var n, i;
            return t === a ? (n = document.createElement('option'), n.setAttribute('value', '' + String(t)), n.setAttribute('selected', 'selected'), _appendChild(n, [o[t]]), n) : (i = document.createElement('option'), i.setAttribute('value', '' + String(t)), _appendChild(i, [o[t]]), i);
        }),
        '\n    '
    ]), i;
}, DPicker.prototype.renderDays = function (t, e, n) {
    var i, a, r = e.model.daysInMonth(), o = e.model.clone().subtract(1, 'months').daysInMonth(), d = e.firstDayOfWeek, s = +e.model.clone().date(1).format('e') - 1, u = e.model.date(), l = e.model.month(), c = e.model.year(), m = void 0, h = void 0, p = void 0, f = void 0, v = new Array(7);
    e.days.map(function (t, e) {
        v[e < d ? 6 - e : e - d] = t;
    }), e.model.isSame(e.min, 'month') && (m = e.min.date(), p = e.min.month()), e.model.isSame(e.max, 'month') && (h = e.max.date(), f = e.max.month());
    var _ = new Array(Math.ceil(0.1 + (s + r) / 7)).fill(0), y = void 0, g = void 0, k = !1, C = !1, D = !0, b = '';
    return a = document.createElement('table'), _appendChild(a, [
        '\n    ',
        (i = document.createElement('tr'), _appendChild(i, [v.map(function (t) {
                var e;
                return e = document.createElement('th'), _appendChild(e, [t]), e;
            })]), i),
        '\n    ',
        _.map(function (n, i) {
            var a;
            return a = document.createElement('tr'), _appendChild(a, [new Array(7).fill(0).map(function (n, a) {
                    var d, m, h;
                    g = D, b = '', a <= s && 0 === i ? (y = o - (s - a), g = !1, k = !0) : a === s + 1 && 0 === i ? (k = !1, y = 1, g = !0) : (y === r && (y = 0, g = !1, D = !1, C = !0), y++);
                    var p = k ? l : C ? l + 2 : l + 1, f = moment(y + '-' + p + '-' + c, 'DD-MM-YYYY');
                    return g === !1 && e.siblingMonthDayClick === !0 && (g = !0), e.min && g && (g = f.isSameOrAfter(e.min, 'day')), e.max && g && (g = f.isSameOrBefore(e.max, 'day')), g === !0 && k === !1 && C === !1 && u === y && (b = 'dpicker-active'), d = document.createElement('td'), d.setAttribute('class', '' + String(g === !0 ? 'dpicker-active' : 'dpicker-inactive')), _appendChild(d, [
                        '\n          ',
                        g === !0 ? (m = document.createElement('button'), m.setAttribute('value', '' + String(y)), m.setAttribute('aria-label', 'Day ' + String(y)), m.setAttribute('aria-disabled', '' + String(g)), m.onclick = k === !1 && C === !1 ? t.dayClick : k === !0 ? t.previousMonthDayClick : t.nextMonthDayClick, m.setAttribute('type', 'button'), m.onkeydown = t.dayKeyDown, m.setAttribute('class', '' + String(b)), _appendChild(m, [
                            '\n                ',
                            y,
                            '\n              '
                        ]), m) : (h = document.createElement('span'), h.setAttribute('class', '' + String(b)), _appendChild(h, [y]), h),
                        '\n          '
                    ]), d;
                })]), a;
        }),
        '\n  '
    ]), a;
}, DPicker.prototype.modelSetter = function (t) {
    this._data.empty = !t, this.isValid(t) === !0 && (this._data.model = t), this.redraw();
}, DPicker.prototype.redraw = function () {
    var t = this.getTree();
    this._tree = nanomorph(this._tree, t);
}, Object.defineProperties(DPicker.prototype, {
    container: {
        get: function () {
            return this._container;
        }
    },
    inputId: {
        get: function () {
            return this._data.inputId;
        }
    },
    input: {
        get: function () {
            return this._data.empty ? '' : this._data.model.format(this._data.format);
        }
    },
    onChange: {
        set: function (t) {
            var e = this;
            this._onChange = function (n) {
                return !!t && t(e._data, n);
            };
        },
        get: function () {
            return this._onChange;
        }
    },
    valid: {
        get: function () {
            return this._data.valid;
        }
    },
    model: {
        set: function (t) {
            this.modelSetter(t);
        },
        get: function () {
            return this._data.model;
        }
    }
}), DPicker.modules = {}, module.exports = DPicker;
},{"nanomorph":1,"yo-yoify/lib/appendChild":4}]},{},[5])(5)
});