(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.DPicker = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function nanomorph(e, o) {
    assert.equal(typeof e, 'object', 'nanomorph: oldTree should be an object'), assert.equal(typeof o, 'object', 'nanomorph: newTree should be an object');
    var a = walk(o, e);
    return a;
}
function walk(e, o) {
    return o ? e ? e.isSameNode && e.isSameNode(o) ? o : e.tagName !== o.tagName ? e : (morph(e, o), updateChildren(e, o), o) : null : e;
}
function updateChildren(e, o) {
    if (e.childNodes && o.childNodes)
        for (var a = e.childNodes.length, r = o.childNodes.length, d = Math.max(r, a), l = 0, n = 0, h = 0; h < d; h++, l++, n++) {
            var t = e.childNodes[l], i = o.childNodes[n], s = walk(t, i);
            s ? i ? s !== i && (o.replaceChild(s, i), l--) : s && (o.appendChild(s), l--) : i && (o.removeChild(i), n--);
        }
}
var morph = require('./lib/morph');
module.exports = nanomorph;
},{"./lib/morph":3}],2:[function(require,module,exports){
module.exports = [
    'onclick',
    'ondblclick',
    'onmousedown',
    'onmouseup',
    'onmouseover',
    'onmousemove',
    'onmouseout',
    'ondragstart',
    'ondrag',
    'ondragenter',
    'ondragleave',
    'ondragover',
    'ondrop',
    'ondragend',
    'onkeydown',
    'onkeypress',
    'onkeyup',
    'onunload',
    'onabort',
    'onerror',
    'onresize',
    'onscroll',
    'onselect',
    'onchange',
    'onsubmit',
    'onreset',
    'onfocus',
    'onblur',
    'oninput',
    'oncontextmenu',
    'onfocusin',
    'onfocusout'
];
},{}],3:[function(require,module,exports){
function morph(e, t) {
    var u = e.nodeType, a = e.nodeName;
    u === ELEMENT_NODE && copyAttrs(e, t), u !== TEXT_NODE && u !== COMMENT_NODE || (t.nodeValue = e.nodeValue), 'INPUT' === a ? updateInput(e, t) : 'OPTION' === a ? updateOption(e, t) : 'TEXTAREA' === a ? updateTextarea(e, t) : 'SELECT' === a && updateSelect(e, t), copyEvents(e, t);
}
function copyAttrs(e, t) {
    for (var u = t.attributes, a = e.attributes, l = null, n = null, r = null, i = null, o = null, d = a.length - 1; d >= 0; --d)
        o = a[d], i = o.name, l = o.namespaceURI, n = o.value, l ? (i = o.localName || i, r = t.getAttributeNS(l, i), r !== n && t.setAttributeNS(l, i, n)) : (r = t.getAttribute(i), r !== n && ('null' === n || 'undefined' === n ? t.removeAttribute(i) : t.setAttribute(i, n)));
    for (var v = u.length - 1; v >= 0; --v)
        o = u[v], o.specified !== !1 && (i = o.name, l = o.namespaceURI, l ? (i = o.localName || i, e.hasAttributeNS(l, i) || t.removeAttributeNS(l, i)) : e.hasAttributeNS(null, i) || t.removeAttribute(i));
}
function copyEvents(e, t) {
    for (var u = 0; u < eventsLength; u++) {
        var a = events[u];
        e[a] ? t[a] = e[a] : t[a] && (t[a] = void 0);
    }
}
function updateOption(e, t) {
    updateAttribute(e, t, 'selected');
}
function updateInput(e, t) {
    var u = e.value, a = t.value;
    updateAttribute(e, t, 'checked'), updateAttribute(e, t, 'disabled'), e.hasAttributeNS(null, 'value') && 'null' !== u ? u !== a ? (t.setAttribute('value', u), t.value = u) : t.value = u : (t.value = '', t.removeAttribute('value'));
}
function updateTextarea(e, t) {
    var u = e.value;
    if (u !== t.value && (t.value = u), t.firstChild) {
        if ('' === u && t.firstChild.nodeValue === t.placeholder)
            return;
        t.firstChild.nodeValue = u;
    }
}
function updateSelect(e, t) {
    if (!t.hasAttributeNS(null, 'multiple')) {
        for (var u = 0, a = t.firstChild; a;) {
            var l = a.nodeName;
            if (l && 'OPTION' === l.toUpperCase()) {
                if (a.hasAttributeNS(null, 'selected'))
                    break;
                u++;
            }
            a = a.nextSibling;
        }
        e.selectedIndex = u;
    }
}
function updateAttribute(e, t, u) {
    e[u] !== t[u] && (t[u] = e[u], e[u] ? t.setAttribute(u, '') : t.removeAttribute(u, ''));
}
var events = require('./events'), eventsLength = events.length, ELEMENT_NODE = 1, TEXT_NODE = 3, COMMENT_NODE = 8;
module.exports = morph;
},{"./events":2}],4:[function(require,module,exports){
module.exports = function e(t, n) {
    for (var o = 0; o < n.length; o++) {
        var a = n[o];
        if (Array.isArray(a))
            e(t, a);
        else {
            if (('number' == typeof a || 'boolean' == typeof a || a instanceof Date || a instanceof RegExp) && (a = a.toString()), 'string' == typeof a) {
                if (t.lastChild && '#text' === t.lastChild.nodeName) {
                    t.lastChild.nodeValue += a;
                    continue;
                }
                a = document.createTextNode(a);
            }
            a && a.nodeType && t.appendChild(a);
        }
    }
};
},{}],5:[function(require,module,exports){
'use strict';
function noop() {
}
function uuid() {
    return ([10000000] + -1000 + -4000 + -8000 + -100000000000).replace(/[018]/g, function (t) {
        return (t ^ 16 * Math.random() >> t / 4).toString(16);
    });
}
function isElementInContainer(t, e) {
    for (; t && t !== document;) {
        if (t.getAttribute('id') === e)
            return !0;
        t = t.parentNode;
    }
    return !1;
}
function DPicker(t) {
    var e = this, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (!(this instanceof DPicker))
        return new DPicker(t, n);
    if (this._container = uuid(), DPicker.hasOwnProperty('properties') || (DPicker.prototype.properties = {
            format: {
                'default': 'DD/MM/YYYY',
                attribute: 'format',
                getset: !0
            },
            model: {
                'default': moment(),
                moment: !0,
                attribute: 'value'
            },
            display: {
                'default': !1,
                getset: !0
            },
            hideOnDayClick: { 'default': !0 },
            hideOnEnter: { 'default': !0 },
            min: {
                'default': moment('1986-01-01'),
                moment: !0,
                attribute: 'min',
                getset: !0
            },
            max: {
                'default': moment().add(1, 'year').month(11),
                moment: !0,
                attribute: 'max',
                getset: !0
            },
            months: {
                'default': moment.months(),
                getset: !0
            },
            days: {
                'default': moment.weekdaysShort(),
                getset: !0
            },
            inputName: {
                'default': 'dpicker-input',
                attribute: 'name'
            },
            inputId: {
                'default': uuid(),
                attribute: 'id'
            },
            empty: { 'default': !1 },
            valid: { 'default': !0 },
            order: {
                'default': [
                    'months',
                    'years',
                    'time',
                    'days'
                ]
            },
            concatHoursAndMinutes: { 'default': !1 },
            siblingMonthDayClick: { 'default': !1 }
        }), this.onChange = n.onChange, this._data = {}, this._loadModules(), this._initData(n), document.addEventListener('click', this._events.hide), 'undefined' == typeof t)
        throw new ReferenceError('Can not initialize DPicker without a container');
    if (void 0 !== t.length && t[0] && (t = t[0]), 'INPUT' === t.tagName) {
        if (!t.parentNode)
            throw new ReferenceError('Can not initialize DPicker on an input without parent node');
        this._parseInputAttributes([].slice.call(t.attributes));
        var i = t.parentNode;
        t.parentNode.removeChild(t), t = i, t.classList.add('dpicker');
    }
    this._initialize(), this.mount(t), t.id = this._container, t.addEventListener('keydown', this._events.keyDown);
    var a = t.querySelector('input');
    return a.addEventListener('blur', this._events.inputBlur), document.addEventListener('touchend', function (t) {
        e._events.inputBlur(t);
    }), this.rootElement = t, this;
}
var _appendChild = require('yo-yoify/lib/appendChild'), nanomorph = require('nanomorph');
DPicker.prototype.getTree = function () {
    return this.renderContainer(this._events, this._data, [
        this.renderInput(this._events, this._data),
        this.render(this._events, this._data, this.getRenderChild())
    ]);
}, DPicker.prototype._initialize = function () {
    this.isValid(this._data.model);
}, DPicker.prototype.mount = function (t) {
    this._tree = this.getTree(), t.appendChild(this._tree);
}, DPicker.prototype.getRenderChild = function () {
    var t = {
        years: this.renderYears(this._events, this._data),
        months: this.renderMonths(this._events, this._data)
    };
    for (var e in this._modulesRender)
        for (var n in this._modulesRender[e])
            t[n] = this._modulesRender[e][n](this._events, this._data);
    return t.days = this.renderDays(this._events, this._data), this._data.order.filter(function (e) {
        return t[e];
    }).map(function (e) {
        return t[e];
    });
}, DPicker.prototype._initData = function (t) {
    var e = this, n = function (n) {
            var i = e.properties[n];
            return !i.getset || n in DPicker.prototype || Object.defineProperty(DPicker.prototype, n, {
                get: function () {
                    return this._data[n];
                },
                set: function (t) {
                    this._data[n] = t, this.redraw();
                }
            }), e._data[n] = i['default'], void 0 === t[n] ? 'continue' : 'model' !== n || t[n] ? void (e._data[n] = t[n]) : (e._data.empty = !0, 'continue');
        };
    for (var i in this.properties) {
        n(i);
    }
}, DPicker.prototype._parseInputAttributes = function (t) {
    var e = this, n = function (n) {
            var i = e.properties[n];
            if (void 0 === i.attribute)
                return 'continue';
            if ('function' == typeof i.attribute)
                return e._data[n] = i.attribute(t), 'continue';
            var a = t.filter(function (t) {
                return t.name === i.attribute;
            })[0];
            if (!a)
                return 'continue';
            var r = a.value;
            return r ? i.moment === !0 && (r = moment(a.value, e._data.format, !0), r.isValid() === !1) ? 'continue' : void (e._data[n] = r) : 'model' === n ? (e._data.empty = !0, 'continue') : 'continue';
        };
    for (var i in this.properties) {
        n(i);
    }
}, DPicker.prototype._loadModules = function () {
    var t = this;
    this._events = this._loadEvents(), this._modulesRender = {};
    for (var e in DPicker.modules) {
        var n = DPicker.modules[e], i = function (e) {
                return t._events[e] ? (t._events[e + '-internal'] || (t._events[e + '-internal'] = [t._events[e]], t._events[e] = function (n) {
                    t._events[e + '-internal'].map(function (e) {
                        return e.bind(t)(n);
                    });
                }), void t._events[e + '-internal'].unshift(n.events[e])) : (t._events[e] = n.events[e].bind(t), 'continue');
            };
        for (var a in n.events) {
            i(a);
        }
        var r = function (e) {
            return DPicker.prototype.hasOwnProperty(e) && 'function' == typeof n.calls[e] ? (t[e + '-internal'] || (t[e + '-internal'] = [DPicker.prototype[e]], t[e] = function () {
                for (var n = arguments.length, i = Array(n), a = 0; a < n; a++)
                    i[a] = arguments[a];
                t[e + '-internal'].map(function (e) {
                    return e.apply(t, i);
                });
            }), void t[e + '-internal'].push(n.calls[e])) : 'continue';
        };
        for (var o in n.calls) {
            r(o);
        }
        if (n.render)
            for (var d in n.render)
                this._modulesRender[d] = n.render;
        if (n.properties)
            for (var s in n.properties)
                this.properties[s] || (this.properties[s] = n.properties[s]);
    }
}, DPicker.prototype._loadEvents = function () {
    var t = this;
    return {
        hide: function (e) {
            if (t.display !== !1) {
                var n = e.target;
                isElementInContainer(n.parentNode, t._container) || (t.display = !1);
            }
        },
        inputChange: function (e) {
            if (e.target.value) {
                var n = moment(e.target.value, t._data.format, !0);
                t.isValid(n) === !0 && (t._data.model = n), t._data.empty = !1;
            } else
                t._data.empty = !0;
            t.redraw(), t.onChange();
        },
        inputBlur: function (e) {
            if (t.display !== !1) {
                var n = e.relatedTarget || e.target;
                isElementInContainer(n.parentNode, t._container) || (t.display = !1);
            }
        },
        inputFocus: function (e) {
            t.display = !0, e.target && e.target.select && e.target.select();
        },
        yearChange: function (e) {
            t._data.empty = !1, t._data.model.year(e.target.options[e.target.selectedIndex].value), t.isValid(t._data.model), t.redraw(), t.onChange();
        },
        monthChange: function (e) {
            t._data.empty = !1, t._data.model.month(e.target.options[e.target.selectedIndex].value), t.isValid(t._data.model), t.redraw(), t.onChange();
        },
        dayClick: function (e) {
            e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange();
        },
        previousMonthDayClick: function (e) {
            t._data.siblingMonthDayClick && (e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.model.subtract(1, 'month'), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange());
        },
        nextMonthDayClick: function (e) {
            t._data.siblingMonthDayClick && (e.preventDefault(), e.stopPropagation(), t._data.model.date(e.target.value), t._data.model.add(1, 'month'), t._data.empty = !1, t._data.hideOnDayClick && (t.display = !1), t.isValid(t._data.model), t.redraw(), t.onChange());
        },
        dayKeyDown: function () {
        },
        keyDown: function (e) {
            if (t._data.hideOnEnter) {
                var n = e.which || e.keyCode;
                13 !== n && 27 !== n || (document.getElementById(t.inputId).blur(), t.display = !1);
            }
        }
    };
}, DPicker.prototype.isValid = function (t) {
    if (!(t instanceof moment && t.isValid()))
        return this._data.valid = !1, !1;
    var e = this.time ? 'minute' : 'day';
    return t.isBefore(this._data.min, e) || t.isAfter(this._data.max, e) ? (this._data.valid = !1, !0) : (this._data.valid = !0, !0);
}, DPicker.prototype.renderInput = function (t, e, n) {
    var i;
    return i = document.createElement('input'), i.setAttribute('id', '' + String(e.inputId)), i.setAttribute('value', '' + String(e.empty === !0 ? '' : e.model.format(e.format))), i.setAttribute('type', 'text'), i.setAttribute('min', '' + String(e.min.format(e.format))), i.setAttribute('max', '' + String(e.max.format(e.format))), i.setAttribute('format', '' + String(e.format)), i.onchange = t.inputChange, i.onfocus = t.inputFocus, i.setAttribute('name', '' + String(e.inputName)), i.setAttribute('aria-invalid', '' + String(e.valid === !1)), i.setAttribute('aria-haspopup', 'aria-haspopup'), i.setAttribute('class', '' + String(e.valid === !1 ? 'dpicker-invalid' : '')), i;
}, DPicker.prototype.renderContainer = function (t, e, n) {
    var i;
    return i = document.createElement('div'), i.setAttribute('class', 'dpicker'), _appendChild(i, [n]), i;
}, DPicker.prototype.render = function (t, e, n) {
    var i;
    return i = document.createElement('div'), i.setAttribute('aria-hidden', '' + String(e.display === !1)), i.setAttribute('class', 'dpicker-container ' + String(e.display === !0 ? 'dpicker-visible' : 'dpicker-invisible')), _appendChild(i, [
        '\n    ',
        n,
        '\n    '
    ]), i;
}, DPicker.prototype.renderYears = function (t, e, n) {
    for (var i, a = e.model.year(), r = e.max.year() + 1, o = e.min.year(), d = []; --r >= o;)
        if (r === a) {
            var s;
            d.push((s = document.createElement('option'), s.setAttribute('value', '' + String(r)), s.setAttribute('selected', 'selected'), _appendChild(s, [r]), s));
        } else {
            var u;
            d.push((u = document.createElement('option'), u.setAttribute('value', '' + String(r)), _appendChild(u, [r]), u));
        }
    return i = document.createElement('select'), i.onchange = t.yearChange, i.setAttribute('name', 'dpicker-year'), i.setAttribute('aria-label', 'Year'), _appendChild(i, [d]), i;
}, DPicker.prototype.renderMonths = function (t, e, n) {
    var i, a = e.model.month(), r = e.model.year(), o = e.months, d = e.months.map(function (t, e) {
            return e;
        });
    if (e.max.year() === r) {
        var s = e.max.month();
        d = d.filter(function (t) {
            return t <= s;
        });
    }
    if (e.min.year() === r) {
        var u = e.min.month();
        d = d.filter(function (t) {
            return t >= u;
        });
    }
    return i = document.createElement('select'), i.onchange = t.monthChange, i.setAttribute('name', 'dpicker-month'), i.setAttribute('aria-label', 'Month'), _appendChild(i, [
        '\n      ',
        d.map(function (t, e) {
            var n, i;
            return t === a ? (n = document.createElement('option'), n.setAttribute('value', '' + String(t)), n.setAttribute('selected', 'selected'), _appendChild(n, [o[t]]), n) : (i = document.createElement('option'), i.setAttribute('value', '' + String(t)), _appendChild(i, [o[t]]), i);
        }),
        '\n    '
    ]), i;
}, DPicker.prototype.renderDays = function (t, e, n) {
    var i, a, r = e.model.daysInMonth(), o = e.model.clone().subtract(1, 'months').daysInMonth(), d = moment.localeData().firstDayOfWeek(), s = +e.model.clone().date(1).format('e') - 1, u = e.model.date(), l = e.model.month(), c = e.model.year(), p = void 0, m = void 0, h = void 0, f = void 0, v = new Array(7);
    e.days.map(function (t, e) {
        v[e < d ? 6 - e : e - d] = t;
    }), e.model.isSame(e.min, 'month') && (p = e.min.date(), h = e.min.month()), e.model.isSame(e.max, 'month') && (m = e.max.date(), f = e.max.month());
    var _ = new Array(Math.ceil(0.1 + (s + r) / 7)).fill(0), y = void 0, g = void 0, k = !1, b = !1, D = !0, C = '';
    return a = document.createElement('table'), _appendChild(a, [
        '\n    ',
        (i = document.createElement('tr'), _appendChild(i, [v.map(function (t) {
                var e;
                return e = document.createElement('th'), _appendChild(e, [t]), e;
            })]), i),
        '\n    ',
        _.map(function (n, i) {
            var a;
            return a = document.createElement('tr'), _appendChild(a, [new Array(7).fill(0).map(function (n, a) {
                    var d, p, m;
                    g = D, C = '', a <= s && 0 === i ? (y = o - (s - a), g = !1, k = !0) : a === s + 1 && 0 === i ? (k = !1, y = 1, g = !0) : (y === r && (y = 0, g = !1, D = !1, b = !0), y++);
                    var h = k ? l : b ? l + 2 : l + 1, f = moment(y + '-' + h + '-' + c, 'DD-MM-YYYY');
                    return g === !1 && e.siblingMonthDayClick === !0 && (g = !0), e.min && g && (g = f.isSameOrAfter(e.min, 'day')), e.max && g && (g = f.isSameOrBefore(e.max, 'day')), g === !0 && k === !1 && b === !1 && u === y && (C = 'dpicker-active'), d = document.createElement('td'), d.setAttribute('class', '' + String(g === !0 ? 'dpicker-active' : 'dpicker-inactive')), _appendChild(d, [
                        '\n          ',
                        g === !0 ? (p = document.createElement('button'), p.setAttribute('value', '' + String(y)), p.setAttribute('aria-label', 'Day ' + String(y)), p.setAttribute('aria-disabled', '' + String(g)), p.onclick = k === !1 && b === !1 ? t.dayClick : k === !0 ? t.previousMonthDayClick : t.nextMonthDayClick, p.setAttribute('type', 'button'), p.onkeydown = t.dayKeyDown, p.setAttribute('class', '' + String(C)), _appendChild(p, [
                            '\n                ',
                            y,
                            '\n              '
                        ]), p) : (m = document.createElement('span'), m.setAttribute('class', '' + String(C)), _appendChild(m, [y]), m),
                        '\n          '
                    ]), d;
                })]), a;
        }),
        '\n  '
    ]), a;
}, DPicker.prototype._modelSetter = function (t) {
    this._data.empty = !t, this.isValid(t) === !0 && (this._data.model = t), this.redraw();
}, DPicker.prototype.redraw = function () {
    var t = this.getTree();
    this._tree = nanomorph(this._tree, t);
}, Object.defineProperties(DPicker.prototype, {
    container: {
        get: function () {
            return this._container;
        }
    },
    inputId: {
        get: function () {
            return this._data.inputId;
        }
    },
    input: {
        get: function () {
            return this._data.empty ? '' : this._data.model.format(this._data.format);
        }
    },
    onChange: {
        set: function (t) {
            var e = this;
            this._onChange = function () {
                return !!t && t(e._data);
            };
        },
        get: function () {
            return this._onChange;
        }
    },
    valid: {
        get: function () {
            return this._data.valid;
        }
    },
    model: {
        set: function (t) {
            this._modelSetter(t);
        },
        get: function () {
            return this._data.model;
        }
    }
}), DPicker.modules = {}, module.exports = DPicker;
},{"nanomorph":1,"yo-yoify/lib/appendChild":4}]},{},[5])(5)
});